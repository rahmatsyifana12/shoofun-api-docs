openapi: '3.0.2'
info:
  title: shoofun
  version: '1.0'
servers:
  - url: 'localhost:5000'

components:
  schemas:
    commonResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
      required:
        - 'status'
        - 'message'

paths:
  /register:
    post:
      summary: 'For register user'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                phoneNumber:
                  type: string
                password:
                  type: string
              required:
                - 'username'
                - 'email'
                - 'password'
                - 'phoneNumber'
            example:
              username: 'rikudou'
              email: 'rikudou@gmail.com'
              phoneNumber: '08123456789'
              password: 'rikudou123'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResponse'
              example:
                status: 'success'
                message: 'Successfully registered a new account'   
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResponse'
              examples:
                'Account already exist':
                  value:
                    status: 'fail'
                    message: 'This account is already exist'    
                'Invalid object':
                  value:
                    status: 'fail'
                    message: 'Object or value is invalid' 
  /login:
    post:
      summary: 'For login user'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - 'email'
                - 'password'
            example:
              email: 'rikudou@gmail.com'
              password: 'rikudou123'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResponse'
              example:
                status: 'success'
                message: 'Successfully login'   
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/commonResponse'
              examples:
                'Account doesn''t exist':
                  value:
                    status: 'fail'
                    message: 'Account doesn''t exist'    
                'Invalid object':
                  value:
                    status: 'fail'
                    message: 'Object or value is invalid'
  
